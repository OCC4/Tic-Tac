<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
        }

        #board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 5px;
            margin: 20px auto;
        }

        .cell {
            width: 100px;
            height: 100px;
            font-size: 2em;
            border: 2px solid #333;
            cursor: pointer;
        }
    </style>
</head>
<body>

    <h1>Tic-Tac-Toe</h1>
    <div id="board"></div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const board = document.getElementById('board');
            const cells = [];
            let currentPlayer = 'X';
            let gameBoard = ['', '', '', '', '', '', '', '', ''];
            let gameActive = true;

            function createBoard() {
                for (let i = 0; i < 9; i++) {
                    const cell = document.createElement('div');
                    cell.classList.add('cell');
                    cell.setAttribute('data-index', i);
                    cell.addEventListener('click', () => cellClick(i));
                    board.appendChild(cell);
                    cells.push(cell);
                }
            }

            function cellClick(index) {
                if (gameBoard[index] === '' && gameActive) {
                    gameBoard[index] = currentPlayer;
                    cells[index].textContent = currentPlayer;
                    checkWinner();
                    togglePlayer();
                }
            }

            function togglePlayer() {
                currentPlayer = (currentPlayer === 'X') ? 'O' : 'X';
            }

            function checkWinner() {
                const winPatterns = [
                    [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows
                    [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns
                    [0, 4, 8], [2, 4, 6]             // Diagonals
                ];

                for (const pattern of winPatterns) {
                    const [a, b, c] = pattern;
                    if (gameBoard[a] !== '' && gameBoard[a] === gameBoard[b] && gameBoard[b] === gameBoard[c]) {
                        announceWinner(gameBoard[a]);
                        return;
                    }
                }

                if (!gameBoard.includes('')) {
                    announceTie();
                }
            }

            function announceWinner(winner) {
                gameActive = false;
                alert(`Player ${winner} wins!`);
            }

            function announceTie() {
                gameActive = false;
                alert('It\'s a tie!');
            }

            createBoard();
        });
    </script>

</body>
</html>
